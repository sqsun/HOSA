// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// EMstep_extension
SEXP EMstep_extension(SEXP yin, SEXP Xin, SEXP Z1in, SEXP Z2in, SEXP Win, SEXP sigma2ein, SEXP sigma2bin, SEXP piin, SEXP Eta1in, SEXP Eta2in, SEXP alphain, SEXP em_iterin);
RcppExport SEXP _HOSA_EMstep_extension(SEXP yinSEXP, SEXP XinSEXP, SEXP Z1inSEXP, SEXP Z2inSEXP, SEXP WinSEXP, SEXP sigma2einSEXP, SEXP sigma2binSEXP, SEXP piinSEXP, SEXP Eta1inSEXP, SEXP Eta2inSEXP, SEXP alphainSEXP, SEXP em_iterinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type yin(yinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xin(XinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z1in(Z1inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z2in(Z2inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Win(WinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sigma2ein(sigma2einSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sigma2bin(sigma2binSEXP);
    Rcpp::traits::input_parameter< SEXP >::type piin(piinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Eta1in(Eta1inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Eta2in(Eta2inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type alphain(alphainSEXP);
    Rcpp::traits::input_parameter< SEXP >::type em_iterin(em_iterinSEXP);
    rcpp_result_gen = Rcpp::wrap(EMstep_extension(yin, Xin, Z1in, Z2in, Win, sigma2ein, sigma2bin, piin, Eta1in, Eta2in, alphain, em_iterin));
    return rcpp_result_gen;
END_RCPP
}
// subG_ADMM_extension
SEXP subG_ADMM_extension(SEXP Yin, SEXP Xin, SEXP Win, SEXP Zin, SEXP Eta1in, SEXP lambdain, SEXP admm_iterin, SEXP tolin);
RcppExport SEXP _HOSA_subG_ADMM_extension(SEXP YinSEXP, SEXP XinSEXP, SEXP WinSEXP, SEXP ZinSEXP, SEXP Eta1inSEXP, SEXP lambdainSEXP, SEXP admm_iterinSEXP, SEXP tolinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Yin(YinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xin(XinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Win(WinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Zin(ZinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Eta1in(Eta1inSEXP);
    Rcpp::traits::input_parameter< SEXP >::type lambdain(lambdainSEXP);
    Rcpp::traits::input_parameter< SEXP >::type admm_iterin(admm_iterinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type tolin(tolinSEXP);
    rcpp_result_gen = Rcpp::wrap(subG_ADMM_extension(Yin, Xin, Win, Zin, Eta1in, lambdain, admm_iterin, tolin));
    return rcpp_result_gen;
END_RCPP
}
// subG_test
SEXP subG_test(SEXP Yin, SEXP Xin);
RcppExport SEXP _HOSA_subG_test(SEXP YinSEXP, SEXP XinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Yin(YinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xin(XinSEXP);
    rcpp_result_gen = Rcpp::wrap(subG_test(Yin, Xin));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _HOSA_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HOSA_EMstep_extension", (DL_FUNC) &_HOSA_EMstep_extension, 12},
    {"_HOSA_subG_ADMM_extension", (DL_FUNC) &_HOSA_subG_ADMM_extension, 8},
    {"_HOSA_subG_test", (DL_FUNC) &_HOSA_subG_test, 2},
    {"_HOSA_rcpp_hello_world", (DL_FUNC) &_HOSA_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_HOSA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
